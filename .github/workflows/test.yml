# This is a basic workflow to help you get started with Actions

name: Tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-cache-files:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.x, 15.x]
    
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: run npm install      
        run: npm ci

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ./*
          key: ${{ github.sha }}

  test:
    runs-on: ubuntu-latest
    needs: [build-and-cache-files]

    strategy:
      matrix:
        node-version: [14.x, 15.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Use cache
        uses: actions/cache@v2
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Test
        run: npm test

  deploy:
    needs: [test]
    if: ${{ github.actor == 'greg-ciandt' }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.x, 15.x]
        # Steps represent a sequence of tasks that will be executed as part of the job
        
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use cache
        uses: actions/cache@v2
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: deploy
        run: echo "Commnads to deploy from here ... todo"
  


